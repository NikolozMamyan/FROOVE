{% extends 'base.html.twig' %}

{% block body %}
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
<style>
:root {
  --primary-color: #6C63FF;
  --secondary-color: #F0F3FF;
  --text-color: #2D2D2D;
  --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --gradient: linear-gradient(135deg, #6C63FF, #846CFF);
}

.chat-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    max-width:800px;
    margin-left:auto;
    margin-right:auto;
    background: #f0f2f5;
    font-family: 'Plus Jakarta Sans', sans-serif;
}

.chat-header {
    background: #fff;
    padding: 1rem 1.5rem;
    box-shadow: 0 2px 15px rgba(0,0,0,0.04);
    position: sticky;
    top: 0;
    z-index: 10;
}

.header-content {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.back-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    color: #1a1a1a;
    transition: all 0.2s ease;
    text-decoration: none;
}

.back-button:hover {
    background: #f0f2f5;
    transform: translateX(-2px);
}

.back-button i {
    font-size: 1.4rem;
}

.user-info {
    display: flex;
    flex-direction: column;
}

.user-info h1 {
    font-size: 1.1rem;
    margin: 0;
    font-weight: 600;
    color: #1a1a1a;
}

.status-text {
    font-size: 0.85rem;
    color: #64748b;
}

.chat-messages {
    flex: 1;
    padding: 2rem;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.message-bubble {
    max-width: 70%;

}

.message-bubble.incoming {
    align-self: flex-start;
}

.message-bubble.outgoing {
    align-self: flex-end;
}

.message-inner {
    display: flex;
    gap: 12px;
    align-items: flex-end;
}

.user-avatar {
    flex-shrink: 0;
}

.avatar-circle {
    width: 40px;
    height: 40px;
    border-radius: 12px;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
}

.message-box {
    position: relative;
}

.sender-name {
    font-size: 0.85rem;
    color: #6366f1;
    margin-bottom: 4px;
    font-weight: 600;
}

.message-text {
    padding: 12px 16px;
    border-radius: 16px;
    font-size: 0.95rem;
    line-height: 1.5;
    color: #1a1a1a;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
}

.incoming .message-text {
    background: white;
    border-bottom-left-radius: 4px;
}

.outgoing .message-text {
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
    border-bottom-right-radius: 4px;
}

.message-meta {
    display: flex;
    align-items: center;
    gap: 4px;
    margin-top: 4px;
    padding: 0 8px;
}

.time {
    font-size: 0.75rem;
    color: #64748b;
}

.outgoing .time {
    color: #94a3b8;
}

.status {
    color: #6366f1;
}

.chat-form-container {
    background: white;
    padding: 1.5rem;
    border-top: 1px solid rgba(0,0,0,0.05);
}

.input-group {
    display: flex;
    gap: 12px;
    align-items: center;
    background: #f8fafc;
    border-radius: 16px;
    padding: 8px 16px;
}
body{
    margin-bottom: 0px;
}
.chat-input {
    flex: 1;
    border: none;
    background: transparent;
    padding: 12px;
    font-size: 0.95rem;
    color: #1a1a1a;
}
nav{
    display:none !important;
}
.chat-input:focus {
    outline: none;
}

.send-button {
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.send-button:hover {
    transform: translateY(-2px);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@media (min-width: 768px) {
    .chat-container {
        margin-top:60px;

        border-radius: 24px;
        max-width: 1000px;
        height: calc(100vh - 4rem);
    }

    .chat-header {
        border-radius: 24px 24px 0 0;
    }
}
</style>
<div class="chat-container">

<header class="chat-header">
    <div class="header-content">
        <a href="{{ path('app_chat') }}" class="back-button">
            <i class="bi bi-arrow-left"></i>
        </a>
        <div class="user-info">
            <h1>{{ otherUser.fullname }}</h1>
            <span class="status-text">En ligne</span>
        </div>
    </div>
</header>

    <div id="chat-messages" class="chat-messages">
        {% include 'chat/_messages.html.twig' with {'messages': messages, 'currentUser': app.user} %}
        
    </div>

    <div class="chat-form-container">
        {{ form_start(form, {'attr': {'id': 'chat-form', 'class': 'chat-form'}}) }}
            <div class="input-group">
                {{ form_widget(form.content, {'attr': {'placeholder': 'Tapez votre message...', 'class': 'chat-input'}}) }}
                <button type="submit" class="send-button">
                    <i class="fa fa-paper-plane"></i> Envoyer
                </button>
            </div>
        {{ form_end(form) }}
    </div>
</div>

<script>
document.addEventListener('turbo:load', () => {
    const chatMessages = document.getElementById('chat-messages');
    const chatForm = document.getElementById('chat-form');
    const otherUserId = '{{ otherUser.id }}';

    setInterval(fetchMessages, 2000);

    function fetchMessages() {
        fetch(`/chat/messages/${otherUserId}`)
            .then(response => response.text())
            .then(html => {
                chatMessages.innerHTML = html;
                scrollToBottom();
            });
    }

    chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(chatForm);
        fetch(`/chat/${otherUserId}`, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                chatForm.reset();
                fetchMessages();
            } else {
                alert('Erreur lors de l\'envoi du message.');
            }
        });
    });

    function scrollToBottom() {
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
});
</script>
{% endblock %}
